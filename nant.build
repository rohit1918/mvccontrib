<?xml version="1.0" encoding="utf-8"?>
<!--EXTERNAL_PROPERTIES: usdDatabaseVersion-->
<!--EXTERNAL_PROPERTIES: CCNetLabel-->
<project name="MVCContrib" default="build" xmlns="http://nant.sf.net/release/0.85/nant.xsd">
	<property name="solution.dir" value="src"/>
	<property name="solution.file" value="${solution.dir}/MVCContrib.sln"/>
	<property name="trunk.dir" value="."/>
	<property name="company.name" value="MVC Contrib"/>
	<property name="bin.dir" value="bin" />
	<property name="build.base" value="build"/>
	<property name="results.dir" value="${build.base}\results" />
	<property name="version.major" value="0"/>
	<property name="version.minor" value="0"/>
	<property name="version.build" value="1"/>
	<property name="version.revision" value="0"/>
	<property name="project.fullversion" value="${version.major}.${version.minor}.${version.build}.${version.revision}" dynamic="true" />
	<property name="nant.settings.currentframework" value="net-3.5" />

	<!-- default configuration -->
	<property name="project.config" value="release" />
	<!-- debug|release -->
	<property name="build.dir" value="${build.base}/${nant.settings.currentframework}.${platform::get-name()}-${project::get-name()}-${project.config}/"/>

	<target name="build" depends="clean, version, init, commonassemblyinfo, compile, move-for-test, test"/>
	<target name="cruise" depends="build, analyze, package"/>
	<target name="commiter" depends="build, analyze, package"/>

	<target name="init" description="Initializes build properties">
		<tstamp>
			<formatter property="datetime.buildtime" pattern="yyyy-MM-dd, HH:mm:ss" />
		</tstamp>
		<delete dir="${build.base}"/>
		<mkdir dir="${build.dir}" />
		<echo message="Current Directory: ${project::get-base-directory()}"/>
	</target>

	<target name="clean" description="delete build artifacts">
		<delete dir="${build.dir}" failonerror="false" />
	</target>

	<target name="version" description="mark AssemblyInfo builds with the build number">
		<if test="${property::exists('CCNetLabel')}">
			<property name="version.revision" value="${CCNetLabel}"/>
		</if>
	</target>

	<target name="commonassemblyinfo" depends="version, init">
		<echo message="MARKING THIS BUILD AS VERSION ${project.fullversion}" />
		<delete file="${solution.dir}/CommonAssemblyInfo.cs" failonerror="false"/>
		<asminfo output="${solution.dir}/CommonAssemblyInfo.cs" language="CSharp">
			<imports>
				<import namespace="System" />
				<import namespace="System.Reflection" />
				<import namespace="System.Runtime.InteropServices" />
			</imports>
			<attributes>
				<attribute type="ComVisibleAttribute" value="false" />
				<attribute type="AssemblyVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyFileVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyCopyrightAttribute" value="Copyright Â© ${company.name} 2007-${datetime::get-year(datetime::now())}" />
				<attribute type="AssemblyProductAttribute" value="${project::get-name()}" />
				<attribute type="AssemblyCompanyAttribute" value="${company.name}" />
				<attribute type="AssemblyConfigurationAttribute" value="${project.config}" />
				<attribute type="AssemblyInformationalVersionAttribute" value="${project.fullversion}" />
			</attributes>
			<references>
				<include name="System.dll" />
			</references>
		</asminfo>
	</target>

	<target name="compile" depends="init">
		<echo message="Build Directory is ${build.dir}" />
		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe"
				  commandline="${solution.file} /t:Clean /p:Configuration=${project.config} /v:q" workingdir="." />
		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe"
				  commandline="${solution.file} /t:Rebuild /p:Configuration=${project.config} /v:q" workingdir="." />
	</target>

	<target name="move-for-test">
		<delete dir="${build.dir}"/>
		<copy todir="${build.dir}" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="/**/bin/${project.config}/**" />
				<include name="*.config"/>
				<exclude name="**/*.xhtml"/>
				<exclude name="**/*.haml"/>
			</fileset>
		</copy>
		
		<!-- copy files required by view engine tests -->
		
		<copy todir="${build.dir}/NHamlViewEngine/Templates" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="**/Templates/*.haml"/>
			</fileset>
		</copy>
		<copy todir="${build.dir}/NHamlViewEngine/Templates/Alt" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="**/Templates/Alt/*.haml"/>
			</fileset>
		</copy>		
		<copy todir="${build.dir}/NHamlViewEngine/Results" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="**/Results/*.xhtml"/>
			</fileset>
		</copy>
		<copy todir="${build.dir}/NHamlViewEngine/Views/NHamlApplication" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="**/Views/NHamlApplication/*.haml"/>
			</fileset>
		</copy>
		<copy todir="${build.dir}/NHamlViewEngine/Views/NHamlController" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="**/Views/NHamlController/*.haml"/>
			</fileset>
		</copy>
		<copy todir="${build.dir}/NHamlViewEngine/Views/Shared" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="**/Views/Shared/*.haml"/>
			</fileset>
		</copy>
		
		<copy todir="${build.dir}/BrailViewEngine">
			<fileset basedir="${solution.dir}/MvcContrib.UnitTests/BrailViewEngine">
				<include name="**/*.brail" />
			</fileset>
		</copy>
		
	</target>

	<target name="test" depends="init">
		<delete dir="${results.dir}" if="${directory::exists('${results.dir}')}" />
		<mkdir dir="${results.dir}"/>

		<nunit2 failonerror="true" verbose="true">
			<formatter type="Xml" outputdir="${results.dir}" usefile="true" extension=".xml"/>
			<formatter type="Plain" />
			<test assemblyname="${build.dir}/MVCContrib.UnitTests.dll">
				<categories>
					<exclude name="Integration" />
				</categories>
			</test>
		</nunit2>
	</target>

	<target name="analyze" >
		<loadtasks path="bin\ncover\Build Task Plugins"/>
		<ncover program="bin\ncover\ncover.console.exe"
						commandLineExe="bin\nunit\nunit-console.exe"
						commandLineArgs="mvccontrib.unittests.dll /exclude=Integration"
						coverageFile="${results.dir}\mvccontrib.coverage.xml"
						workingDirectory="${build.dir}"
            failonerror="false"  >

			<assemblies basedir="${build.dir}">
				<exclude name="**/*.unittest*"/>
				<include name="mvccontrib*.dll" />
			</assemblies>
		</ncover>

		<!--reportType="ModuleClassSummary"  ModuleClassFunctionSummary -->
		<ncoverexplorer program="bin\ncover\ncoverexplorer.console.exe"
										projectName="Mvc Contrib"
										outputDir="${results.dir}"
										failCombinedMinimum="false"
										satisfactoryCoverage="95"
										minimumCoverage="95"
										reportType="ModuleClassFunctionSummary"
										htmlReportName="CoverageSummary.html"
										xmlReportName="CoverageSummary.xml" >
			<fileset basedir="${results.dir}">
				<include name="*.coverage.xml" />
			</fileset>
			<moduleThresholds>
				<moduleThreshold moduleName="MVCContrib.DLL"		satisfactoryCoverage="95" />
				<moduleThreshold moduleName="MvcContrib.Castle.DLL" satisfactoryCoverage="95" />
				<moduleThreshold moduleName="MvcContrib.Spring.DLL" satisfactoryCoverage="95" />
				<moduleThreshold moduleName="MvcContrib.StructureMap.DLL" satisfactoryCoverage="95" />
				<moduleThreshold moduleName="MvcContrib.XsltViewEngine.DLL" satisfactoryCoverage="95" />
				<moduleThreshold moduleName="MvcContrib.NHamlViewEngine.DLL" satisfactoryCoverage="80" />
				<moduleThreshold moduleName="MvcContrib.BrailViewEngine.DLL" satisfactoryCoverage="75" />
			</moduleThresholds>

		</ncoverexplorer>
		<property name="ndepend.input" value="${directory::get-current-directory()}\bin\ndepend\mvccontrib.xml"/>
		<xmlpoke file="${ndepend.input}" xpath="/NDepend/Dirs/Dir" value="${directory::get-current-directory()}\${build.dir}" />
		<xmlpoke file="${ndepend.input}" xpath="/NDepend/OutputDir" value="${directory::get-current-directory()}\${results.dir}" />
		<exec program="bin\ndepend\NDepend.Console.exe">
			<arg value="${ndepend.input}" />
		</exec>
		<!--
		<loadtasks path="bin\ndepend\nant" />
		<NDepend NDependConsoleExePath="bin\ndepend\ndepend.console.exe"
							ProjectFilePath="bin\ndepend\MvcContrib.xml"/>
		-->
	</target>
	<target name="package">
		<!-- 		
			make a new dir for release.
			include subfolders
				bin
					referenceDLLs
				samples
		-->
		<mkdir dir="${build.base}/release/" />

		<mkdir dir="${build.base}/release/Bin" />
		<copy todir="${build.base}/release/Bin" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="/**/bin/${project.config}/mvccontrib**" />
			</fileset>
		</copy>

		<mkdir dir="${build.base}/release/Samples" />
		<copy todir="${build.base}/release/Samples" >
			<fileset basedir="${solution.dir}">
				<exclude name="**/bin/**"/>
				<exclude name="**/obj/**"/>
				<include name="/**samples**/**" />
			</fileset>
		</copy>

		<mkdir dir="${build.base}/release/Helpers/" />
		<copy todir="${build.base}/release/Helpers" >
			<fileset basedir="extras">
				<include name="/**/**" />
			</fileset>
		</copy>

		<zip zipfile="${build.base}/MVCContrib.release.zip" includeemptydirs="false" >
			<fileset basedir="${build.base}/release/">
				<include name="**/*.*"/>
				<exclude name="**/*.CodeAnalysisLog.xml"/>
				<exclude name="**/*.lastcodeanalysissucceeded"/>
			</fileset>
		</zip>

		<zip zipfile="${build.base}/MVCContrib.source.zip" includeemptydirs="false" >

			<fileset basedir="${trunk.dir}" >
				<exclude name="bin/ncover/**"/>
				<exclude name="bin/ndepend/**"/>
				<exclude name="**/build/**"/>
				<exclude name="src/**/bin/**"/>
				<exclude name="**/obj/**"/>
				<exclude name="**/*.resharper*"/>
				<exclude name="**/*.suo"/>
				<exclude name="**/*.cache"/>
				<exclude name="**/*.user"/>
				<exclude name="**/_ReSharper.MVCContrib/**"/>
				<exclude name="**/*.CodeAnalysisLog.xml"/>
				<exclude name="**/*.lastcodeanalysissucceeded"/>
				<include name="**/*.*"/>
			</fileset>
		</zip>
	</target>
</project>
